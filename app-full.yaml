apiVersion: v1
kind: Namespace
metadata:
  name: tns-cloud
---
apiVersion: v1
kind: Service
metadata:
  annotations: {
    "prometheus.io/scrape": "true",
    "prometheus.io/port": "80"
  }
  labels:
    name: app
  name: app
  namespace: tns-cloud
spec:
  ports:
  - name: app-http-metrics
    port: 80
    targetPort: 80
  selector:
    name: app
---
apiVersion: v1
kind: Service
metadata:
  annotations: {
    "prometheus.io/scrape": "true",
    "prometheus.io/port": "80"
  }
  labels:
    name: db
  name: db
  namespace: tns-cloud
spec:
  ports:
  - name: db-http-metrics
    port: 80
    targetPort: 80
  selector:
    name: db
---
apiVersion: v1
kind: Service
metadata:
  annotations: {
    "prometheus.io/scrape": "true",
    "prometheus.io/port": "80"
  }
  labels:
    name: loadgen
  name: loadgen
  namespace: tns-cloud
spec:
  ports:
  - name: loadgen-http-metrics
    port: 80
    targetPort: 80
  selector:
    name: loadgen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: tns-cloud
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: app
  template:
    metadata:
      annotations: {
        "prometheus.io/scrape": "true",
        "prometheus.io/port": "80"
      }
      labels:
        name: app
    spec:
      containers:
      - args:
        - -log.level=debug
        - http://db
        env:
        - name: JAEGER_AGENT_HOST
          value: grafana-agent-traces.grafana-system.svc.cluster.local
        - name: JAEGER_TAGS
          value: cluster=prod-us-east-2,namespace=tns-cloud
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        image: grafana/tns-app:latest
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 80
          name: http-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: tns-cloud
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: db
  template:
    metadata:
      annotations: {
        "prometheus.io/scrape": "true",
        "prometheus.io/port": "80"
      }
      labels:
        name: db
    spec:
      containers:
      - args:
        - -log.level=debug
        env:
        - name: JAEGER_AGENT_HOST
          value: grafana-agent-traces.grafana-system.svc.cluster.local
        - name: JAEGER_TAGS
          value: cluster=prod-us-east-2,namespace=tns-cloud
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        image: grafana/tns-db:latest
        imagePullPolicy: IfNotPresent
        name: db
        ports:
        - containerPort: 80
          name: http-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgen
  namespace: tns-cloud
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: loadgen
  template:
    metadata:
      annotations: {
        "prometheus.io/scrape": "true",
        "prometheus.io/port": "80"
      }
      labels:
        name: loadgen
    spec:
      containers:
      - args:
        - -log.level=debug
        - http://app
        env:
        - name: JAEGER_AGENT_HOST
          value: grafana-agent-traces.grafana-system.svc.cluster.local
        - name: JAEGER_TAGS
          value: cluster=prod-us-east-2,namespace=tns-cloud
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        image: grafana/tns-loadgen:latest
        imagePullPolicy: IfNotPresent
        name: loadgen
        ports:
        - containerPort: 80
          name: http-metrics
